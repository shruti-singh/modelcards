{"paragraphs": ["Multilingual Denoising Pre-training for Neural Machine Translation. This paper demonstrates that multilingual denoising pre-training produces significant performance gains across a wide variety of machine translation (MT) tasks. We present mBART \u2013 a sequence-to-sequence denoising auto-encoder pre-trained on large-scale monolingual corpora in many languages using the BART objective (Lewis et al., 2019). mBART is the first method for pre-training a complete sequence-to-sequence model by denoising full texts in multiple languages, while previous approaches have focused only on the encoder, decoder, or reconstructing parts of the text. Pre-training a complete model allows it to be directly fine tuned for supervised (both sentence-level and document-level) and unsupervised machine translation, with no task-specific modifications. We demonstrate that adding mBART initialization produces performance gains in all but the highest-resource settings, including up to 12 BLEU points for low resource MT and over 5 BLEU points for many document-level and unsupervised models. We also show it also enables new types of transfer to language pairs with no bi-text or that were not in the pre-training corpus, and present extensive analysis of which factors contribute the most to effective pre-training. Multilingual Denoising Pre-training for Neural Machine Translation. This paper demonstrates that multilingual denoising pre-training produces significant performance gains across a wide variety of machine translation (MT) tasks. We present mBART \u2013 a sequence-to-sequence denoising auto-encoder pre-trained on large-scale monolingual corpora in many languages using the BART objective (Lewis et al., 2019). mBART is the first method for pre-training a complete sequence-to-sequence model by denoising full texts in multiple languages, while previous approaches have focused only on the encoder, decoder, or reconstructing parts of the text.", "Pre-training a complete model allows it to be directly fine tuned for supervised (both sentence-level and document-level) and unsupervised machine translation, with no task-specific modifications. We demonstrate that adding mBART initialization produces performance gains in all but the highest-resource settings, including up to 12 BLEU points for low resource MT and over 5 BLEU points for many document-level and unsupervised models. We also show it also enables new types of transfer to language pairs with no bi-text or that were not in the pre-training corpus, and present extensive analysis of which factors contribute the most to effective pre-training. This paper demonstrates that multilingual denoising pre-training produces significant performance gains across a wide variety of machine translation (MT) tasks. We present mBART \u2013 a sequence-to-sequence denoising auto-encoder pre-trained on large-scale monolingual corpora in many languages using the BART objective (Lewis et al., 2019). mBART is the first method for pre-training a complete sequence-to-sequence model by denoising full texts in multiple languages, while previous approaches have focused only on the encoder, decoder, or reconstructing parts of the text. Pre-training a complete model allows it to be directly fine tuned for supervised (both sentence-level and document-level) and unsupervised machine translation, with no task-specific modifications. We demonstrate that adding mBART initialization produces performance gains in all but the highest-resource settings, including up to 12 BLEU points for low resource MT and over 5 BLEU points for many document-level and unsupervised models. We also show it also enables new types of transfer to language pairs with no bi-text or that were not in the pre-training corpus, and present extensive analysis of which factors contribute the most to effective pre-training. 1 Introduction.", "Despite its wide adoption for other NLP tasks (Devlin et al., 2019; Liu et al., 2019; Yang et al., 2019; Lewis et al., 2019; Raffel et al., 2019), selfsupervised pretraining is not yet common practice in machine translation (MT). Existing MT approaches only pre-train parts of the model, including the encoder (Lample and Conneau, 2019) and the decoder (Edunov et al., 2019), or use pretraining objectives that only reconstruct parts of text (Song et al., 2019), or only focus on English\n* Equal contribution. corpora (Lewis et al., 2019; Raffel et al., 2019). In this paper, we show that significant performance gains are possible by pre-training a complete autoregressive model with an objective that noises and reconstructs full texts across many languages. In this work, we present mBART \u2013 a multilingual sequence-to-sequence (Seq2Seq) denoising auto-encoder. mBART is trained by applying the BART (Lewis et al., 2019) to large-scale monolingual corpora across many languages. The input texts are noised by masking phrases and permuting sentences, and a single Transformer (Vaswani et al., 2017) model is learned to recover the texts. Different from other pre-training approaches for MT (Lample and Conneau, 2019; Song et al., 2019), mBART pre-trains a complete autoregressive Seq2Seq model. mBART is trained once for all languages, providing a set of parameters that can be fine-tuned for any of the language pairs in both supervised and unsupervised settings, without any task-specific or language-specific modifications or initialization schemes. Extensive experiments demonstrate that this simple approach works remarkably well. We first focus on existing MT benchmarks. For supervised sentence-level MT, mBART initialization leads to significant gains (up to 12 BLEU points) across low/medium-resource pairs (<10M bi-text pairs), without sacrificing performance in high-resource settings.", "These results further improve with backtranslation (BT), setting a new state-of-the-art on WMT16 English-Romanian and the FloRes test sets. For document-level MT, our document-level pre-training improves results by up to 5.5. For the unsupervised case, we see consistent gains and produce the first non-degenerate results for less related language pairs (e.g., 9.5 BLEU gain on Nepali-English). Previous pre-training schemes have only considered subsets of these tasks, but we compare performance where possible and demonstrate that mBART consistently performs the best. ar X iv :2 00 1.\n08 21\n0v 2\n[ cs\n.C L\n] 2\n3 Ja\nn 20\n20\nWe also show that mBART enables new types of transfer across language pairs. For example, fine-tuning on bi-text in one language pair (e.g., Korean-English) creates a model that can translate from all other languages in the monolingual pre-training set (e.g., Italian-English), with no further training. We also show that languages not in pre-training corpora can benefit from mBART, strongly suggesting that the initialization is at least partially language universal. Finally, we present a detailed analysis of which factors contribute the most to effective pre-training, including the number of languages and their overall similarity. 2 Multilingual Denoising Pre-training. We use a large-scale common crawl (CC) corpus (\u00a72.1) to pre-train BART models (\u00a72.2). Our experiments in the later sections involve finetuning a range of models pre-trained on different subsets of the CC languages \u00a72.3). 2.1 Data: CC25 corpus. Datasets We pre-train on a subset of 25 languages \u2013 CC25 \u2013 extracted from the Common Crawl (CC) (Wenzek et al., 2019; Conneau et al., 2019)1. CC25 includes languages from different families and with varied amounts of text (Table 1). Following Lample and Conneau (2019), we rebalanced the corpus by up/down-sampling text from each language i with a ratio \u03bbi:\n\u03bbi = 1 pi \u00b7 p \u03b1 i\u2211 i p \u03b1 i , (1)\nwhere pi is the percentage of each language in CC25.", "We use the smoothing parameter \u03b1 = 0.7. Pre-processing We tokenize with a sentencepiece model (SPM, Kudo and Richardson, 2018) learned on the full CC data that includes 250, 000 subword tokens. While not all of these languages are used for pre-training, this tokenization supports fine-tuning on additional languages. We do not apply additional preprocessing, such as truecasing or normalizing punctuation/characters. 2.2 Model: mBART. Our models follow the BART (Lewis et al., 2019) sequence-to-sequence pre-training scheme, as reviewed in this section. While BART was only pretrained for English, we systematically study the effects of pre-training on different sets of languages. 1https://commoncrawl.org\nArchitecture We use a standard sequence-tosequence Transformer architecture (Vaswani et al., 2017), with 12 layers of encoder and 12 layers of decoder with model dimension of 1024 on 16 heads (\u223c 680M parameters). We include an additional layer-normalization layer on top of both the encoder and decoder, which we found stabilized training at FP16 precision. Learning Our training data coversK languages: D = {D1, ...,DK} where each Di is a collection of monolingual documents in language i. We (1) assume access to a noising function g, defined below, that corrupts text, and (2) train the model to predict the original text X given g(X). More formally, we aim to maximize L\u03b8: L\u03b8 = \u2211 Di\u2208D \u2211 X\u2208Di logP (X|g(X); \u03b8) , (2)\nwhere X is an instance in language i and the distribution P is defined by the Seq2Seq model. Noise function Following Lewis et al. (2019), we use two types of noise in g. We first remove spans of text and replace them with a mask token. We mask 35% of the words in each instance by random sampling a span length according to a Poisson distribution (\u03bb = 3.5). We also permute the order of sentences within each instance. The decoder input is the original text with one position offset. A language id symbol <LID> is used as the initial token to predict the sentence.", "It is also possible to use other noise types, such as those in Lample et al. (2018c), but we leave the exploration of the optimal noising strategy to future work. Instance format For each instance of a batch, we sample a language id symbol <LID>, and we pack as many consecutive sentences as possible sampled from the corresponding corpus of <LID>, until either it hits the document boundary or reaches the 512 max token length. Sentences in the instance are separated by the end of sentence (</S>) token. Then, we append the selected <LID> token to represent the end of this instance. Pre-training at \u201cmulti-sentence\u201d level enables us to work on both sentence and document translation. Optimization Our full model (including 25 languages) is trained on 256 Nvidia V100 GPUs (32GB) for 500K steps. The total batch size is around 128K tokens per GPU, matching BART (Lewis et al., 2019) configuration. We use the Adam optimizer ( = 1e\u22126, \u03b22 = 0.98) and linear learning rate decay scheduling. The total training time was approximately 2.5 weeks. We started the training with dropout 0.1 and reduced it to 0.05 at 250K steps and 0 at 400K steps. All experiments are done with Fairseq (Ott et al., 2019). 2.3 Pre-trained Models. To better measure the effects of different levels of multilinguality during pre-training, we built a range of models as follows:\n\u2022 mBART25 We pre-train a model on all 25 languages, using the setting described in \u00a72.2.\n\u2022 mBART06 To explore the effect of pre-training on related languages, we pretrain a model on a subset of six European languages: Ro, It, Cs, Fr, Es and En. For a fair comparison, we use\u223c 1/4 of the mBART25 batch size, which allows our model to have the same number of updates per language during pre-training. \u2022 mBART02 We pre-train bilingual models, using English and one other language for four language pairs: En-De, En-Ro, En-It. We use a batch size of \u223c 1/12 of that in the mBART25.", "\u2022 BART-En/Ro To help establish baseline performance levels, we also train monolingual BART models on the same En and Ro corpus only. \u2022 Random As additional baselines, we will also include a comparison with a model randomly initialized without pre-training for each translation task. Since the sizes of different downstream datasets vary, we always grid-search the hyper-parameters (architecture, dropout, etc.) to find the best non-pretrained configuration. All models use the same vocabulary (\u00a72.1). Not all tokens will frequently occur in all pre-training corpora, but later experiments show that this large vocabulary can improve generalization in multilingual settings even for unseen languages. 3 Sentence-level Machine Translation. This section shows that mBART pre-training provides consistent performance gains in low to medium resource sentence-level MT settings, including bi-text only and with back translation, and outperforms other existing pre-training schemes (\u00a73.2). We also present a detailed analysis to understand better which factors contribute the most to these gains (\u00a73.3), and show that pre-training can even improve performance for languages not present in the pre-training data at all (\u00a73.4). 3.1 Experimental Settings. Datasets We gather 24 pairs of publicly available parallel corpora that cover all the languages in CC25 (Table 1). Most pairs are from previous WMT (Gu, Kk, Tr, Ro, Et, Lt, Fi, Lv, Cs, Es, Zh, De, Ru, Fr \u2194 En) and IWSLT (Vi, Ja, Ko, Nl, Ar, It \u2194 En) competitions. We also use FLoRes pairs (Guzm\u00e1n et al., 2019, En-Ne and EnSi), En-Hi from IITB (Kunchukuttan et al., 2017),\nand En-My from WAT19 (Ding et al., 2018, 2019). We divide the datasets into three categories \u2013 low resource (<1M sentence pairs), medium resource (>1M and <10M), and high resource (>10M). Fine-tuning & Decoding We fine-tune our multilingual pre-trained models on a single pair of bitext data, feeding the source language into the encoder and decoding the target language.", "As shown in Figure 1, we load the pre-trained weights and train the MT model on bi-texts with teacher forcing. For all directions, we train with 0.3 dropout, 0.2 label smoothing, 2500 warm-up steps, 3e\u22125 maximum learning rate. We use a maximum of 40K training updates for all low and medium resource pairs and 100K for high resource pairs. The final models are selected based on validation likelihood. For decoding, we use beam-search with beam size 5 for all directions. The final results are reported in BLEU (Papineni et al., 2002) with language-specific settings, see appendix A.\n3.2 Main Results. As shown in Table 2, initializing with the pretrained mBART25 weights shows gains on all the low and medium resource pairs when compared with randomly initialized baselines. We observe gains of 12+ BLEU on low resource pairs such as En-Vi, En-Tr, and noisily aligned pairs like En-Hi. Fine-tuning fails in extremely low-resource setting such as En-Gu, which only have roughly 10k ex-\namples for tuning. In these settings, unsupervised translation is more appropriate, see \u00a75.2. For high resource cases (Table 3), we do not observe consistent gains, and pre-training slightly hurts performance when >25M parallel sentence are available. When a significant amount of bi-text data is given, we suspect that supervised training washes out the pre-trained weights completely. + Back Translation Back-translation (BT, Sennrich et al., 2016b) is a standard approach to augment bi-text with target side monolingual data. We combine our pre-training with BT and test it on low resource language pairs \u2013 En-Si and En-Ne \u2013 using the FLoRes dataset (Guzm\u00e1n et al., 2019). For a fair comparison, we use the same monolingual data as (Guzm\u00e1n et al., 2019) to generate BT data. Figure 2 shows that initializing the model with our mBART25 pre-trained parameters improves BLEU scores at each iteration of back translation, resulting in new state-of-the-art results in all four translation directions.", "v.s. Other Pre-training Approaches We also compare our pre-trained models with recent selfsupervised pre-training methods, as shown in Table 4. We consider En-Ro translation, the only pair with established results. Our mBART model\noutperforms all the other pre-trained models, both with and without BT augmentation. We also show comparisons with the conventional BART model trained on the same En and Ro data only. Both have improvements over baselines, while worse than mBART results, indicating pre-training in a multilingual setting is essential. Moreover, combining BT leads to additional gains, resulting in a new state-of-the-art for Ro-En translation. 3.3 Analysis. We also present additional analysis, to better quantify when our pre-training helps. How many languages should you pre-train on? We investigate when it is helpful for pre-training to include languages other than the targeted language pair that will be used during fine tuning. Table 5 shows performance on four X-En pairs. Pretraining on more languages helps most when the target language monolingual data is limited (e.g. En-My, the size of My is around 0.5% of En). In contrast, when monolingual data is plentiful (De, Ro), pre-training on multiple languages slightly hurts the final results (<1 BLEU). In these cases, additional languages may reduce the capacity available for each test language. Additionally, the fact that mBART06 performs similar to mBART02 on Ro-En suggests that pre-training with similar languages is particularly helpful. How many pre-training steps are needed? We plot Ro-En BLEU score v.s. Pre-training steps in Figure 3, where we take the saved checkpoints (every 25K steps) and apply the same fine-tuning process described in \u00a73.1. Without any pre-training, our model overfits and performs much worse than the baseline. However, after just 25K steps (5% of training), both models outperform the best baseline.", "The models keep improving by over 3 BLEU for the rest of steps and have not fully converged after 500K steps. mBART25 is consistently\nslightly worse than mBART02. How does the size of bitexts inference the gain from pre-training? Tables 2 and 3 show that pre-training consistently improves for low and medium resource language pairs. To verify this trend, we plot performance for differing sized subsets of the En-De dataset. More precisely, we take the full En-De corpus (28M pairs) and randomly sample 10K, 50K, 100K, 500K, 1M, 5M, 10M datasets. We compare performance without pretraining to the mBART02 results, as shown in Figure 4. The pre-trained model is able to achieve over 20 BLEU with only 10K training examples, while the baseline system scores 0. Unsurprisingly, increasing the size of bi-text corpus improves both models. Our pre-trained model consistently outperforms the baseline models, but the gap reduces with increasing amounts of bi-text, especially after 10M sentence pairs. This result confirms our observation in \u00a73.2 that our pre-training does not help translation in high-resource pairs. Is pre-training complementary to BT? Figure 2 presents that our pre-trained models can be combined with iterative back-translation (BT) on additional data, however, it is still not a fair comparison. Table 6 shows the results when using\nsame monolingual data where we use 79M En and 29M My sentences following Chen et al. (2019). With the same amount of monolingual corpus, mBART pre-training achieves the same performance on En\u2192My as BT, while still 3 BLEU worse on My\u2192En. We suspect BT benefits from bigger monolingual data (En). Moreover, combining mBART02 model with BT, we see further gains even with same monolingual data. Besides, we also provide estimated training costs where BT has a longer pipeline involving training a baseline system (5h), translating monolingual data (300h) and formal training (350h).", "Instead, most of training costs of mBART lies in the pre-training part and can be easily adjusted to be more efficient. 3.4 Generalization to Languages NOT in Pre-training. In this section, we show that mBART can improve performance even with fine tuning for languages that did not appear in the pre-training corpora, suggesting that the pre-training has language universal aspects, especially within the parameters learned at the Transformer layers. Experimental Settings We analyze the results of three pairs: Nl-En, Ar-En and De-Nl using the pre-trained mBART25, mBART06 and mBART02 (EnRo) models. During pre-training, mBART06 and EnRo Bilingual do not contain Arabic (Ar), German (De) or Dutch (Nl) data, but all languages are in mBART25. Both De and Nl are European languages and are related to En, Ro and other the languages in mBART06 pre-training data. Results mBART25 uses all languages during pre-training, but other settings contain at least one unseen language. We find large gains from pretraining on English-Romanian, even when translating a distantly related unseen language (Arabic) and two unseen languages (German and Dutch). The best results are achieved when pre-training includes both test languages, however pre-training on other languages is surprisingly competitive. Unseen Vocabularies Arabic is distantly related to the languages in mBART02 and mBART06, and its use of a disjoint character set means that it word embeddings will be largely untrained. However, we obtain similar improvements on Ar-En pairs to those on Nl-En. This result suggests that the pretrained Transformer layers learn universal properties of language that generalize well even with minimal lexical overlap. Unseen Source or Target Languages Table 7 shows different performance when the unseen languages are on the source side, target side, or both sides. If both sides are unseen, the performance (in terms of difference from mBART25) is worse than where at least one language is seen during pre-training.", "Furthermore, although the En-X pairs perform similarly, mBART06 outperforms mBART02 by a margin on X-En pairs. Fine-tuning unseen languages on source side is more difficult, deserving more extensive future study. 4 Document-level Machine Translation. We evaluate mBART on document-level machine translation tasks, where the goal is to translate segments of text that contain more than one sentence (up to an entire document). During pre-training, we use document fragments of up to 512 tokens, allowing the models to learn dependencies between sentences. We show that this pre-training significantly improves document-level translation.\n4.1 Experimental Settings. Datasets We evaluate performance on two common document-level MT datasets: WMT19 En-De and TED15 Zh-En (statistics in Table 8). For EnDe, we use the document data from WMT19 to train our model, without any additional sentencelevel data; Zh-En dataset is from the IWSLT 2014 and 2015 evaluation campaigns (Cettolo et al., 2012, 2015). Following Miculicich et al. (2018), we use 2010-2013 TED as the test set. Pre-processing We use the same pre-processing as that in pre-training. For each block, sentences are separated by end of sentence symbols (</S>) and the entire instance is ended with the specific language id (<LID>). The numbers of segmented instances are also shown in Table 8 where on average, every document is split into 2-4 instances. Fine-tuning & Decoding We use the same finetuning scheme as for sentence-level translation (\u00a73.1), without using any task-specific techniques developed by previous work (Miculicich et al.,\n2018; Li et al., 2019), such as constrained contexts or restricted attention. For decoding, we simply pack the source sentences into blocks, and translate each instance block autoregressively. The model does not know how many sentences to generate in advance and decoding stops when <LID> is predicted.", "We use beam size 5 by default.\nBaselines & Evaluation We train 4 models: a document-level (Doc-) MT model (\u00a74.1) and a corresponded sentence-level (Sent-) MT model (\u00a73.1) as the baseline, both with and without pretraining. We use mBART25 as the common pretrained model for En-De and Zh-En. For En-De, even though our mBART25 Doc-MT model decodes multiple sentences together, the translated sentences can be aligned to the source sentences, which allows us to evaluate BLEU scores both on sentence-level (s-BLEU) and document-level (dBLEU) 2. For Zh-En, however, we cannot produce the same number of translated sentences as the reference due to alignment errors in the test data. We only provide the d-BLEU scores on this direction. We also compare our models with Hierarchical Attention Networks (HAN, Miculicich et al., 2018) on Zh-En, which is the state-of-the-art nonpretraining approach for document-level translation for this pair. They combine two layers of attention \u2013 first within and then across sentences. 4.2 Main Results. We show the main results for both En-De and ZhEn are presented in Table 9. Random v.s. Pre-trained The MT models initialized with pre-trained weights outperform randomly initialized models by large margins, for both sentence-level and document-level training. Our mBART25 models (both Sent-MT and DocMT) also outperform HAN (Miculicich et al.,\n2Standard BLEU scores match n-grams at sentence-level. We also consider document-level where we match n-grams over the whole document resulting in a slightly higher score.\n2018)3, despite the fact that they are not customized for document-level MT in any way. Sent-MT v.s. Doc-MT For cases (En-De, EnZh), the mBART25 Doc-MT models outperform themselves fine-tuned at sentence-level by a margin, which is completely opposite for models without pre-training. For both datasets, randomly initialized Doc-MT fail to work, resulting in much worse results than the sentence-level models.", "Such large performance gaps indicate that pre-training is critical for document level performance. It is in general difficult to collect high quality documentlevel data in large quantities, suggesting that pretraining may be a strong strategy for future work. We also include a sampled example in appendix B.\n5 Unsupervised Machine Translation. In addition to supervised machine translation, we also evaluate our model on tasks where no bi-text is available for the target language pair. We define three types of unsupervised translation:\n1. No bi-text of any kind is given. A common solution is to learn from back-translation (BT) (Artetxe et al., 2017; Lample et al., 2018c). We show that mBART provides a simple and effective initialize scheme for these methods. 2. No bi-text for the target pair is available, but the target languages both appear in bi-text corpora for other language pairs. Previous work has shown that zero-shot transfer is possible via massively multi-lingual MT (Johnson et al., 2017; Gu et al., 2019) or distillation through pivoting (Chen et al., 2017). We limit our focus to building MT models for single language pairs, and leave multi-lingual pre-training for multi-lingual MT to future work. 3. No bi-text for the target pair is available, but there is bi-text for translating from some other 3d-BLEU is recomputed from the provided system output. language into the target language. This is a new evaluation regime, where we will show that mBART supports effective transfer, even if the source language has no bi-text of any form. In this section, we demonstrate the effectiveness of multilingual pre-training in unsupervised machine translation via (1) back-translation ( \u00a75.1) and (3) language transfer (\u00a75.2). An illustration of both approaches are presented in Figure 5.\n5.1 Unsupervised Machine Translation via Back-Translation.", "Datasets We evaluate our pre-trained models on both similar (En-De, En-Ro) and dissimilar pairs (En-Ne, En-Si), which are determined by measuring the subword units that are shared between the source and target languages. We use the same test sets as the supervised benchmarks \u00a73.1, and directly use the pre-training data (CC25) for backtranslation to avoid introducing new information. Learning Following the same procedure described in Lample et al. (2018c); Lample and Conneau (2019), we first initialize the translation model with the pre-trained weights, and then learn to predict the monolingual sentences conditioned on source sentences generated by on-thefly back-translation (BT). Lample and Conneau (2019) only pre-train an encoder, so perform additional de-noising training to learn a seq2seq model \u2013 a step which is unnecessary for mBART\u2019s pretrained seq2seq model. However, we do constrain mBART to only generating tokens in target language 4 for the first 1000 steps of on-the-fly BT, to avoid it simply copying the source text. Results Table 10 shows the unsupervised translation results compared with non-pretrained mod-\n4We mask out the output probability of predicting tokens which appear less than 1% in the target monolingual corpus. els, as well as models with existing pre-training methods. Our models achieve large gains over non-pretrained models for all directions, and outperform XLM significantly for dissimilar pairs (En-Ne, En-Si) where the existing approaches completely fail. For similar pairs, our model also performs well against XLM and MASS, with the best numbers for En-X pairs. 5.2 Unsupervised Machine Translation via Language Transfer. The second case of unsupervised machine translation assumes the target language appears in a bitext corpus with some other source language.", "Datasets We only consider X\u2192En translation, and choose the bitexts of 12 language pairs from \u00a73.1, covering Indic languages (Ne, Hi, Si, Gu), European languages (Ro, It, Cs, Nl), East Asian languages (Zh, Ja, Ko) and Arabic languages (Ar). Results As illustrated in Figure 5 (b), we take the pre-trained mBART25 model and finetune on each language pair, and then directly apply them to the rest of pairs, as seen in Table 11. We also present the direct fine-tuning performance (\u00a73) on the diagonal, for reference. We can always obtain reasonable transferring scores at all pairs over different fine-tuned models except from Gu-En where the supervised model completely fails (0.3 BLEU). In some cases, we can achieve similar (Cs-En) or even much better (Ne-En, Gu-En) results compared to the supervised results. As a comparison, we also apply the same procedure on randomly initialized models without pretraining, which always ends up with \u2248 0 BLEU. This indicates that multilingual pre-training is essential and produces universal representations across languages, so that once the model learns to translate one language to En, it learns to trans-\nlate all languages with similar representations. We also present three examples of language transferring between Zh, Ja and Ko in appendix B.\nWhen is language transfer useful? Table 11 also shows mixed results at each pair. First, for most pairs, language transfer works better when fine-tuning is also conducted in the same language family, especially between Indic languages (Hi, Ne, Gu). However, significant vocabulary sharing is not required for effective transfer. For instance, Zh-En and It-En achieve the best transfer learning results on Ko-En and Ar-En, respectively. How-\never, the vocabulary overlapping (even character overlapping) between Zh and Ko, It and Ar is low. w/ Back-Translation We also present the comparison on 4 pairs of unsupervised MT with backtranslation (BT) v.s. language transfer in Table 12. The results are also mixed.", "If there exists high quality (similar languages) bi-text data, or translating between dissimilar pairs, language transfer is able to beat the conventional methods with BT. Furthermore, we also show promising results for combining these two techniques. In such cases, we start from the best transferred model and apply (iterative) BT on the same monolingual corpus used in pre-training. Table 12 presents the results with 1 iteration of BT. For all pairs, we see improvements by combining both techniques. 6 Related Work. Pre-training for Text Generation This work inherits from the recent success brought by selfsupervised pre-training for NLP applications (Pe-\nters et al., 2018; Radford et al., 2018; Devlin et al., 2019; Yang et al., 2019; Liu et al., 2019), especially for text generation tasks (Radford et al., 2019; Song et al., 2019; Dong et al., 2019; Raffel et al., 2019; Lewis et al., 2019) where different self-supervised objectives are designed for training big neural models on enormous unlabeled text corpora The pre-trained models are usually used as the initialization for fine-tuning variant downstream tasks such as controllable language modeling (Shirish Keskar et al., 2019), machine translation (Song et al., 2019), summarization (Liu and Lapata, 2019) and dialogue generation (Zhang et al., 2019). In contrast to most prior work, we focus on a deep exploration of applying denoising pre-training for various translation applications. Multilinguality in NLP tasks This work is also related to the continual trend of multilingual language learning, including aligning multilingual word embeddings (Mikolov et al., 2013; Chen and Cardie, 2018; Lample et al., 2018b) into universal space, and learning cross-lingual models (Wada and Iwata, 2018; Lample and Conneau, 2019; Conneau et al., 2019) to exploit shared representations across languages.", "For machine translation, the most relevant field is multilingual translation (Firat et al., 2016; Vi\u00e9gas et al., 2016; Aharoni et al., 2019; Arivazhagan et al., 2019) where the ultimate goal is to jointly train one translation model that translates multiple language directions at the same time, and shares representations to improve the translation performance on low-resource languages (Gu et al., 2018). In this paper, we mainly focus on multilingualism in the pre-training stage and fine-tune the learned model in the standard bi-lingual scenario. Compared to multilingual translation, we do not require parallel data across multiple languages but the targeted direction, which potentially improves the scalability to low-resource languages and specific domains. Moreover, multilingual pre-training is unlikely to suffer the interference problems between dissimilar languages, which is typical for regular multilingual translation models. Document Translation As one of the key applications , this work also links to previous efforts for incorporating document-level contexts into neural machine translation (Wang et al., 2017; Jean et al., 2017; Tiedemann and Scherrer, 2017; Miculicich et al., 2018; Tu et al., 2018). Li et al.\n(2019) is the most relevant work which also utilized pre-trained encoder (BERT) for handling longer context. However, none of these works had shown positive results on pure Seq2Seq models at document-level, which involved task-specific techniques, and usually only worked on sentencelevel translation with a constrained range of context. To the extent of our knowledge, our multilingual pre-trained model is the first-of-its-kind work that shows improved results on documentlevel translation with standard Seq2Seq learning. Unsupervised Translation", "This work also summarizes the previous efforts of learning to translate between languages without a direct parallel corpus, and re-defines them as unsupervised machine translation with three categories where in this work, we only focus on applications to the first and the third kinds (\u00a75). When no parallel corpus of any kind is available, Artetxe et al. (2017); Lample et al. (2018a,c) proposed to jointly learn denoising auto-encoder and back-translation from both directions, which, however, required good initialization and only worked well on similar language pairs; Wu et al. (2019a) replaced back-translation with retrieved similar sentences from target monolingual data; Wu et al. (2019b) solves the problem by mining sentences from Wikipedia and use them as weakly supervised translation pairs. Similar to Lample and Conneau (2019) ; Song et al. (2019), we follow the first approach and treat our pretrained model as the initialization step. Besides, we investigate unsupervised translation using language transfer, which is similar to Pourdamghani et al. (2019) where the authors generate translationese of the source language and train a system on high-resource languages to correct these intermediate utterances. It is also closely related to Conneau et al. (2018); Artetxe et al. (2019) for cross-lingual representation learning. 7 Conclusion. We demonstrate that multilingual de-noising pretraining is able to significantly improve both supervised and unsupervised machine translation at both the sentence level and document level. We analyze when and how pre-training is most effective and can be combined with other approaches such as back-translation. Our results also show the transfer learning ability of the learned representations from multilingual pre-training. In future work, we will scale-up the current pre-\ntraining to more languages, e.g., an mBART100 model.", "The size of our model makes it expensive to deploy in production \u2013 future work will explore pre-training more efficient models. 8 Acknowledgements. We thank Marc\u2019Aurelio Ranzato, Guillaume Lample, Alexis Conneau, and Michael Auli for sharing their expertise on low-resource and unsupervised machine translation, Peng-Jen Chen, Jiajun Shen for details about FloRes and WAT datasets. We also thank our colleagues at FAIR and FAIAR for valuable feedback. A Evaluation Details. For all our tasks, we use BLEU scores (Papineni et al., 2002) as the automatic metric to evaluate the translation performance. Normally, we compute the BLEU scores over tokenized text for both system outputs and the references, and we apply language-wise tokenization after over the translation. Note that, since we directly work on raw texts, we automatically get de-tokenized output after recovering sentence-piece subwords. Following the literature, the instructions of language-wise tokenization are as follows:\n\u2022 Gu, Ne, Si, Hi: We use Indic-NLP Library 5 to tokenize the Indic language outputs. \u2022 Ja: We use KyTea 6 to segment Japanese texts. \u2022 Ko: We use Mecab-Ko 7 and its default dictionary to segment the Korean texts\n\u2022 Ar: We apply QCRI Arabic Normalizer 8 over the Arabic texts. \u2022 My: We use the official segmentation tool provided by Ding et al. (2019) for Burmese. \u2022 Ro: Following Sennrich et al. (2016a), we apply Moses tokenization and special normalization for Romanian texts 9. \u2022 Zh: We use the official sacreBleu (Post, 2018)10 Chinese tokenizer (\u2013tok zh). For other languages that are not listed above, we compute BLEU scores with sacreBLEU with DEFAULT tokenization. B Translation Examples\n5https://anoopkunchukuttan.github.io/indic_nlp_library/ 6http://www.phontron.com/kytea/ 7http://konlpy.org/en/v0.3.0/install/ 8http://alt.qcri.org/tools/arabic-normalizer/ 9https://github.com/rsennrich/wmt16-script\n10https://github.com/mjpost/sacreBLEU"]}